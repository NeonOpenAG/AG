#!/bin/bash

USAGE="$0 [-v] [-h] [status|start|stop|destroy|restart|reset|import] [[docker]...]"
OAGLIB=/usr/local/lib/openag
OAGCONF=/usr/local/etc/openag.conf

source $(dirname $0)/openag.functions.sh
source /usr/local/etc/openag.conf

############################
# Check config and folders #
############################

which docker > /dev/null
if [ "$?" != 0 ]; then
    echo "You need to install docker for the dockers to work"
    echo "Check here: https://www.docker.com/get-docker"
    exit 1
fi

# Special case `openag install`
if [ "$1" == "install" ]; then
    openag_install
    exit 0
fi

if [ ! -e "$OAGCONF" ]; then
   openag_install_message
   exit 1
fi

#####################
# Process Arguments #
#####################

VERBOSE=0

while getopts "hv" options; do
	case $options in
		v) VERBOSE=1;;
		h) usage; exit 0;;
    esac
done

shift $((OPTIND-1))
ACTION=$1
if [ -z "$ACTION" ]; then
    ACTION='status'
fi

if [ $ACTION != 'status' ] && [ $ACTION != 'start' ] && [ $ACTION != 'stop' ] && [ $ACTION != 'restart' ] && [ $ACTION != 'destroy' ] && [ $ACTION != 'update' ] && [ $ACTION != 'reset' ] && [ $ACTION != 'import' ]; then
	echo $USAGE
	exit 1;
fi

###########
# ACTIONS #
###########

DOCKERS=`echo $@ | sed -e 's/^\w*\ *//'`
IDS=
for DOCKER in $DOCKERS; do
    ID=$(docker ps -a -q --filter name=openag_${DOCKER} --format="{{.ID}}")
    if [ ! -z "$ID" ]; then
        IDS="$ID $IDS"
    fi
done

if [ -z "$IDS" ]; then
    IDS=$(docker ps -a -q --filter name=openag_ --format="{{.ID}}")
    IDS=$(echo $IDS | sed -e "s/\n/ /g")
fi

if [ -z "$DOCKERS" ]; then
    DOCKERS="cove geocoder dportal"
fi

if [ "0" != "$VERBOSE" ]; then
    echo "IDS=$IDS"
    echo "DOCKERS=$DOCKERS"
fi

case $ACTION in
    status)
      docker ps -a --filter name=openag_;;
    start)
        start_dockers $DOCKERS;;
    stop)
        stop_dockers $IDS;;
    destroy)
        destroy_dockers $IDS;;
    update)
        update_dockers $IDS;;
    reset)
        data_reset $@;;
    import)
        data_import $DOCKERS $@;;
    restart)
        stop_dockers
        start_dockers;;
esac
